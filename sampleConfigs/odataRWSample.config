[
  {
    "identifier": 0,
    "name": "OData Demo",
    "baseUrl": "http://services.odata.org/V2/(S(gzxg2g2jojqkf3e3xd0pan0l))/OData/OData.svc/",
    "prefixUrl": "http://services.odata.org/V2/(S(gzxg2g2jojqkf3e3xd0pan0l))/OData/OData.svc/",
    "requests": [
      {
        "identifier": 1,
        "name": "-Service Document",
        "description": "",
        "httpMethod": "GET",
        "useProjectPrefixUrl": false,
        "fetchCSRFToken": false,
        "url": "http://services.odata.org/V2/OData/OData.svc/",
        "tags": "",
        "requestBody": "",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "xml",
        "groupName": "Service",
        "assertions": [],
        "requestHeaders": []
      },
      {
        "identifier": 2,
        "name": "-Metadata Document",
        "description": "",
        "httpMethod": "GET",
        "useProjectPrefixUrl": false,
        "fetchCSRFToken": false,
        "url": "http://services.odata.org/V2/OData/OData.svc/$metadata",
        "tags": "",
        "requestBody": "",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "xml",
        "groupName": "Service",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "200"
          }
        ],
        "requestHeaders": []
      },
      {
        "identifier": 32,
        "name": "Product Create ID1000 payload in request payload",
        "description": "",
        "httpMethod": "POST",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Products",
        "tags": "",
        "requestBody": "",
        "scriptCode": "req.requestBody = JSON.stringify(\n    {\n    \"ID\" : 1000,\n    \"Name\": \"AAA2\",\n    \"Description\": \"My AAA2 product\",\n    \"ReleaseDate\": \"2001-01-01T00:00:00\",\n    \"DiscontinuedDate\": null,\n    \"Rating\": 4,\n    \"Price\": \"40.5\"\n    }\n);",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "product",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "201"
          },
          {
            "name": "",
            "assertProperty": "JSONBODY",
            "operation": "EQUALS",
            "path": "$.d.ID",
            "expected": "1000"
          },
          {
            "name": "",
            "assertProperty": "JSONBODY",
            "operation": "EQUALS",
            "path": "$.d.Description",
            "expected": "\"My AAA2 product\""
          },
          {
            "name": "",
            "assertProperty": "JSONBODY",
            "operation": "GREATEROREQUAL",
            "path": "$.d.Rating",
            "expected": "4"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Content-Type",
            "fieldValue": "application/json"
          },
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 33,
        "name": "Product GetAll",
        "description": "",
        "httpMethod": "GET",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Products",
        "tags": "",
        "requestBody": "",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "product",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "200"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 34,
        "name": "Product Get ID1000",
        "description": "",
        "httpMethod": "GET",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Products(1000)",
        "tags": "",
        "requestBody": "",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "product",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "200"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 35,
        "name": "Product Delete ID1000",
        "description": "",
        "httpMethod": "DELETE",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Products(1000)",
        "tags": "",
        "requestBody": "",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "product",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "204"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 36,
        "name": "Product Update ID1000",
        "description": "",
        "httpMethod": "PUT",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Products(1000)",
        "tags": "",
        "requestBody": "{\n    \"ID\" : 1000,\n    \"Name\": \"ZZZ\",\n    \"Description\": \"My new product name\",\n    \"ReleaseDate\": \"2001-01-01T00:00:00\",\n    \"DiscontinuedDate\": null,\n    \"Rating\": 4,\n    \"Price\": \"200.5\"\n}",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "product",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "204"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Content-Type",
            "fieldValue": "application/json"
          },
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 37,
        "name": "GENERIC Create",
        "description": "",
        "httpMethod": "POST",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "",
        "tags": "",
        "requestBody": "",
        "scriptCode": "req.requestBody = JSON.stringify(seqStorage.oPayload);\nreq.url = req.url + seqStorage.sUrlPath;",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "generic",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "201"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Content-Type",
            "fieldValue": "application/json"
          },
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 38,
        "name": "Product Create ID1000 payload in prerequest script",
        "description": "",
        "httpMethod": "POST",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Products",
        "tags": "",
        "requestBody": "{\n    \"ID\" : 1000,\n    \"Name\": \"XXX\",\n    \"Description\": \"My products\",\n    \"ReleaseDate\": \"2001-01-01T00:00:00\",\n    \"DiscontinuedDate\": null,\n    \"Rating\": 1,\n    \"Price\": \"20.5\"\n}",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "product",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "201"
          },
          {
            "name": "",
            "assertProperty": "JSONBODY",
            "operation": "EQUALS",
            "path": "$.d.ID",
            "expected": "1000"
          },
          {
            "name": "",
            "assertProperty": "JSONBODY",
            "operation": "EQUALS",
            "path": "$.d.Description",
            "expected": "\"My products\""
          },
          {
            "name": "",
            "assertProperty": "JSONBODY",
            "operation": "LESSOREQUAL",
            "path": "$.d.Rating",
            "expected": "1"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Content-Type",
            "fieldValue": "application/json"
          },
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 39,
        "name": "GENERIC Get",
        "description": "",
        "httpMethod": "GET",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "",
        "tags": "",
        "requestBody": "",
        "scriptCode": "req.url = req.url + seqStorage.sUrlPathEntry;",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "generic",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "200"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Content-Type",
            "fieldValue": "application/json"
          },
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 40,
        "name": "GENERIC Delete",
        "description": "",
        "httpMethod": "DELETE",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "",
        "tags": "",
        "requestBody": "",
        "scriptCode": "req.url = req.url + seqStorage.sUrlPathEntry;",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "generic",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "204"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Content-Type",
            "fieldValue": "application/json"
          },
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      },
      {
        "identifier": 41,
        "name": "Supplier GetAll",
        "description": "",
        "httpMethod": "GET",
        "useProjectPrefixUrl": true,
        "fetchCSRFToken": false,
        "url": "Suppliers",
        "tags": "",
        "requestBody": "",
        "scriptCode": "",
        "testScriptCode": "",
        "responseBodyFormat": "json",
        "groupName": "",
        "assertions": [
          {
            "name": "",
            "assertProperty": "STATUS",
            "operation": "EQUALS",
            "path": "",
            "expected": "200"
          }
        ],
        "requestHeaders": [
          {
            "fieldName": "Accept",
            "fieldValue": "application/json"
          }
        ]
      }
    ],
    "sequences": [
      {
        "identifier": 1,
        "name": "Product CRUD",
        "description": "create get update delete sample",
        "preSequenceScript": "",
        "abortOnFailedAssertion": false,
        "sequenceItems": [
          {
            "identifier": 32
          },
          {
            "identifier": 34
          },
          {
            "identifier": 36
          },
          {
            "identifier": 35
          }
        ]
      },
      {
        "identifier": 2,
        "name": "Generic CRUD - Product",
        "description": "",
        "preSequenceScript": "var iID = 4002;\n\nseqStorage.oPayload = {\n    \"ID\" : iID,\n    \"Name\": \"BB3\",\n    \"Description\": \"My BB3 product\",\n    \"ReleaseDate\": \"2001-01-01T00:00:00\",\n    \"DiscontinuedDate\": null,\n    \"Rating\": 1,\n    \"Price\": \"4.8\"\n};\nseqStorage.sUrlPath = \"Products\";\nseqStorage.sUrlPathEntry = \"Products(\" + iID + \")\";",
        "abortOnFailedAssertion": false,
        "sequenceItems": [
          {
            "identifier": 37
          },
          {
            "identifier": 39
          },
          {
            "identifier": 40
          }
        ]
      },
      {
        "identifier": 3,
        "name": "Generic CRUD - Supplier",
        "description": "delete will fail",
        "preSequenceScript": "var iID = 200;\n\nseqStorage.oPayload = {\n    \"ID\": iID,\n    \"Name\": \"Exotic Liquids\"\n};\nseqStorage.sUrlPath = \"Suppliers\";\nseqStorage.sUrlPathEntry = \"Suppliers(\" + iID + \")\";",
        "abortOnFailedAssertion": false,
        "sequenceItems": [
          {
            "identifier": 37
          },
          {
            "identifier": 39
          },
          {
            "identifier": 40
          }
        ]
      }
    ],
    "prefixUrls": []
  }
]